// Code generated by mlflow/go/cmd/generate/main.go. DO NOT EDIT.

package main

import "C"
import (
	"unsafe"
	"github.com/mlflow/mlflow-go/pkg/protos"
)
//export ModelRegistryServiceRenameRegisteredModel
func ModelRegistryServiceRenameRegisteredModel(serviceID int64, requestData unsafe.Pointer, requestSize C.int, responseSize *C.int) unsafe.Pointer {
	service, err := modelRegistryServices.Get(serviceID)
	if err != nil {
		return makePointerFromError(err, responseSize)
	}
	return invokeServiceMethod(service.RenameRegisteredModel, new(protos.RenameRegisteredModel), requestData, requestSize, responseSize)
}
//export ModelRegistryServiceUpdateRegisteredModel
func ModelRegistryServiceUpdateRegisteredModel(serviceID int64, requestData unsafe.Pointer, requestSize C.int, responseSize *C.int) unsafe.Pointer {
	service, err := modelRegistryServices.Get(serviceID)
	if err != nil {
		return makePointerFromError(err, responseSize)
	}
	return invokeServiceMethod(service.UpdateRegisteredModel, new(protos.UpdateRegisteredModel), requestData, requestSize, responseSize)
}
//export ModelRegistryServiceDeleteRegisteredModel
func ModelRegistryServiceDeleteRegisteredModel(serviceID int64, requestData unsafe.Pointer, requestSize C.int, responseSize *C.int) unsafe.Pointer {
	service, err := modelRegistryServices.Get(serviceID)
	if err != nil {
		return makePointerFromError(err, responseSize)
	}
	return invokeServiceMethod(service.DeleteRegisteredModel, new(protos.DeleteRegisteredModel), requestData, requestSize, responseSize)
}
//export ModelRegistryServiceGetRegisteredModel
func ModelRegistryServiceGetRegisteredModel(serviceID int64, requestData unsafe.Pointer, requestSize C.int, responseSize *C.int) unsafe.Pointer {
	service, err := modelRegistryServices.Get(serviceID)
	if err != nil {
		return makePointerFromError(err, responseSize)
	}
	return invokeServiceMethod(service.GetRegisteredModel, new(protos.GetRegisteredModel), requestData, requestSize, responseSize)
}
//export ModelRegistryServiceGetLatestVersions
func ModelRegistryServiceGetLatestVersions(serviceID int64, requestData unsafe.Pointer, requestSize C.int, responseSize *C.int) unsafe.Pointer {
	service, err := modelRegistryServices.Get(serviceID)
	if err != nil {
		return makePointerFromError(err, responseSize)
	}
	return invokeServiceMethod(service.GetLatestVersions, new(protos.GetLatestVersions), requestData, requestSize, responseSize)
}
